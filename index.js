
// switch(Dream){
//     case 'Doctor' :
//     break;
//     case 'Engineer' :
//         console.log('Yes, This is my dream');
//         break;
//     default :
//     console.log('as your wish')
// }

// for (let i = 1; i <= 10; i ++){
//     console.log('Sajjad')
// }

// let i = 1;
// while ( i <= 5 ){
//     console.log('Runnig...')
//     i++
// }

// let i = 2;

// do{
// console.log('On times')
// i++
// }while( i <= 10);


// Remember


// while( i <= 10){
//     console.log("While");
//     i++
// }

// for(let i = 2; i <= 5; i++ ){
//     console.log("hello")
// }


// // HomeWork


// let money = 20;

// while(money >= 2){
//     console.log( money);
//     money--
// }


// let text = 'Hello World, Hello Tumi?';

// let result = text.replaceAll("Hello", " Good Bye")
// let upperLower = text.toLowerCase()

// console.log(upperLower)

// let first = 'Lucky';
// let last = 'seif';

// let full = first.concat(" ", last)

// console.log(full)

// let text = '  Hello World '
// let final = text.trim()

// console.log(final)

// let num = 'Sajjad';

// let final = num.padStart(10, "Ali ")
// console.log(final)

// let text = "Hello";
// console.log(text.charAt(0));


// let text = "a|b|c|d|e|f|g";

// let arr = text.split("|");

// for(let i = 0; i < arr.length; i++){
//     console.log(arr[i])
// }

// let loves  = "I Love JavaScript";

// let result = loves.startsWith("I");
// console.log(result)

// HomeWOrk Problem 

// function dataType(data){
//     console.log( typeof data);
// }

// dataType(123); //number
// dataType("str"); //tring
// dataType(true); //bolean
// dataType(Symbol()); //Symbol


// //  Problem 2 

// function getLength(checkLength){
//     console.log(checkLength.length);
// }

// getLength('JavaScript');

// // 3

// function firstCha(text){
//     console.log(text.charAt(0));
// }

// firstCha('Bangladesh');

// // 4

// function replaceword(reple){
//     console.log(reple.replace('Hi', 'Hello'));
// }

// replaceword('Hi GPT My Freind, I Love You,');


// // 5


// function checkWord(text, word){
//     console.log(text.search(word));
// };

// checkWord("I Love JS", 'Love');
// checkWord("I love Python", 'I');

// confuced //

// function capitalize(param){
//     let firstIndex = param.slice(0,1).toUpperCase();
//     let lastIndex = param.slice(1).toLowerCase();
//     let final = firstIndex + lastIndex;

//     console.log(final);
// }

// capitalize("hello");


// // 

// function countWords(param){
//     console.log(param.split(" ").length);
// }
// countWords("I love You Ma")


// //  


// // üîπ 1. Check Data Types
// function dataType(data) {
// console.log("Data Type:", typeof data);
// }
// dataType(123);
// dataType("str");
// dataType(true);
// dataType(Symbol());

// // üîπ 2. Get String Length
// function getLength(checkLength) {
// console.log("String Length:", checkLength.length);
// }
// getLength('JavaScript');

// üîπ 3. First Character (index 1)
// function firstCha(text) {
// console.log("Character at index 1:", text.charAt(1));
// }
// firstCha('Bangladesh');

// // üîπ 4. Replace Word (fix spelling mistake: replece ‚Üí replace)
// function replaceword(reple) {
// let final = reple.replace('Hi', 'Hello');
// console.log("After Replace:", final);
// }
// replaceword('Hi GPT My Friend, I Love You');

// // üîπ 5. Search Word (fix spelling: serch ‚Üí search)
// function checkWord(text) {
// console.log("Search 'JS' index:", text.search("JS"));
// }
// checkWord("I Love JS");
// checkWord("I love Python");

// // üîπ 6. Capitalize First Letter (fix spelling toLowerCase)
// function capitalize(param) {
// let firstIndex = param.slice(0, 1).toUpperCase();
// let lastIndex = param.slice(1).toLowerCase();
// let final = firstIndex + lastIndex;
// console.log("Capitalized:", final);
// }
// capitalize("hello tmi");

// // üîπ 7. Count Words
// function countWords(param) {
// let word = param.split(" ");
// console.log("Word Count:", word.length);
// }
// countWords("I love You Ma");

// day 2



// /* üìå Problem 1:
// ‡¶è‡¶ï‡¶ü‡¶æ function ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì ‡¶Ø‡ßá‡¶ü‡¶æ ‡¶ï‡ßã‡¶®‡ßã ‡¶¶‡¶∂‡¶Æ‡¶ø‡¶ï ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶á‡¶®‡¶™‡ßÅ‡¶ü ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶®‡¶ø‡¶≤‡ßá ‡¶§‡¶æ‡¶∞ ‡¶¶‡¶∂‡¶Æ‡¶ø‡¶ï‡ßá‡¶∞ ‡¶™‡¶∞ 2 ‡¶ò‡¶∞ ‡¶∞‡¶æ‡¶ñ‡¶¨‡ßá‡•§*/

// function problemOne(param){
//     console.log(param.toFixed(2));
// }
// problemOne(13.7657654)

// /*üìå Problem 2:
// ‡¶è‡¶ï‡¶ü‡¶æ function ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì ‡¶Ø‡ßá‡¶ü‡¶æ string ‡¶π‡¶ø‡¶∏‡ßá‡¶¨‡ßá ‡¶è‡¶ï‡¶ü‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶®‡¶ø‡¶¨‡ßá, parse ‡¶ï‡¶∞‡ßá Number return ‡¶ï‡¶∞‡¶¨‡ßá‡•§ ‡¶Ø‡¶¶‡¶ø NaN ‡¶π‡ßü, ‡¶§‡¶æ‡¶π‡¶≤‡ßá "Invalid Number" ‡¶¨‡¶≤‡¶¨‡ßá‡•§*/

// function problemTwo(param){
//     let number = parseInt(param);
//     if( number == NaN ){
//         console.log("Invalid Number")
//     }else{
//         console.log(number);
//     }
// };
// problemTwo("678390")


// confuced
// /*üìå Problem 3:
// ‡¶è‡¶ï‡¶ü‡¶æ function ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì ‡¶Ø‡ßá‡¶ü‡¶æ Infinity, -Infinity, NaN ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßá ‡¶¨‡¶≤‡ßá "Invalid input" ‡¶ï‡¶ø‡¶®‡¶æ‡•§ */
// // sorry,



// //////////////////////////

// // Homework:

// //  Number ‡¶è‡¶¨‡¶Ç BigInt ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶™‡¶æ‡¶∞‡ßç‡¶•‡¶ï‡ßç‡¶Ø ‡¶≤‡¶ø‡¶ñ‡ßã
// // ans: number onnk gulo thaklew 15 upore thekbe na,  BigInt 15 tar upore hole last a n add hobe

// //  Number Methods-‡¶è‡¶∞ ‡ß´‡¶ü‡¶æ ‡¶â‡¶¶‡¶æ‡¶π‡¶∞‡¶£ ‡¶®‡¶ø‡¶ú‡ßá ‡¶ï‡¶∞‡ßã
// // toFixed()
// // parseInt()
// // parseFloat()
// // isNaN()
// // Number.MMX_VALUE()

// function problemThree(param){
// if (param === Infinity || param === -Infinity || isNaN(param)) {
// console.log("Invalid input");
// } else {
// console.log("Valid input:", param);
// }
// }
// problemThree(Infinity); // Invalid
// problemThree(-Infinity); // Invalid
// problemThree(NaN); // Invalid
// problemThree(123); // Valid


// function problemThree(param){
//     if( param === Infinity || param === -Infinity || isNaN(param)){
//         console.log("Invalid Input");
//     }else {
//         console.log(param);
//     }
// }

// problemThree(Infinity); // Invalid
// problemThree(-Infinity); // Invalid
// problemThree(NaN); // Invalid
// problemThree(123); // Valid


// // homework

// let gf = ["Tania", "Bristy", "Tithy", "Mukta", "Anni"];


// console.log("This is my vabi: ", gf[0]);
// console.log("This is my nani: ", gf[1]);
// console.log("This is my crush: ", gf[2]);
// console.log("This is my biyan: ", gf[3]);
// console.log("This is my sister: ", gf[4])



// let tasks = ["Wake Up", "Pray", "Code", "Sleep"];

// // ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶®‡¶ø‡¶ú‡ßá‡¶∞ ‡¶Æ‡¶§‡ßã ‡ß©‡¶ü‡¶æ ‡¶ï‡¶æ‡¶ú push ‡¶ï‡¶∞‡ßã: 
// tasks.push('metting', 'prayer', 'reading quran')
// // ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ ‡¶™‡ßç‡¶∞‡¶•‡¶Æ item shift ‡¶ï‡¶∞‡ßá ‡¶´‡ßá‡¶≤‡ßã
// tasks.shift();
// // ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ ‡¶∏‡¶¨‡¶ó‡ßÅ‡¶≤‡ßã‡¶ï‡ßá " | " ‡¶¶‡¶ø‡ßü‡ßá join ‡¶ï‡¶∞‡ßã
// let final =  tasks.join(" | ")
// // ‡¶∏‡¶¨‡¶∂‡ßá‡¶∑‡ßá console-‡¶è result ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ì
// console.log(tasks)
// console.log(final)





// let favFoods = ["Biryani", "Burger", "Pizza", "Kacchi"];

// // 1Ô∏è‚É£ "Pizza" ‡¶ï‡ßã‡¶® index-‡¶è ‡¶Ü‡¶õ‡ßá ‡¶∏‡ßá‡¶ü‡¶æ ‡¶ñ‡ßÅ‡¶Å‡¶ú‡ßá ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßã (indexOf)
// let pizza = favFoods.indexOf("Pizza");

// // 2Ô∏è‚É£ "Fuchka" ‡¶è‡¶á item ‡¶ü‡¶æ ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ check ‡¶ï‡¶∞‡ßã (includes)
// let fuchka = favFoods.includes("Fuchka");

// // 3Ô∏è‚É£ ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ console-‡¶è ‡¶¶‡ßÅ‡¶á‡¶ü‡¶æ‡¶∞ result print ‡¶ï‡¶∞‡ßã
// console.log(pizza); // 2
// console.log(fuchka); //false


// let myMarks = [88, 45, 92, 30, 100, 75];

// // 1Ô∏è‚É£ ‡¶¨‡ßú ‡¶•‡ßá‡¶ï‡ßá ‡¶õ‡ßã‡¶ü (descending) ‡¶∏‡¶æ‡¶ú‡¶æ‡¶ì
// myMarks.sort((a, b )=>{
//     return a - b;
// })

// // sorry for this, tell me batter way
// console.log(myMarks)
// // 2Ô∏è‚É£ ‡¶õ‡ßã‡¶ü ‡¶•‡ßá‡¶ï‡ßá ‡¶¨‡ßú (ascending) ‡¶∏‡¶æ‡¶ú‡¶æ‡¶ì
// myMarks.sort(function(a, b){
//     return b - a;
// })
// // 3Ô∏è‚É£ ‡¶¶‡ßÅ‡¶á‡¶ü‡¶æ‡¶ï‡ßá‡¶á console log ‡¶ï‡¶∞‡ßã
// console.log(myMarks)

// // extra work

// let great = ["X","C", "E", "Z", "B", "D", "A", "F", "G"]
// console.log(great.sort());




///////////////////////////////
// let todos = ["Pray", "Study", "Code", "Eat", "Sleep"];

// // 1Ô∏è‚É£ forEach ‡¶¶‡¶ø‡ßü‡ßá console log ‡¶ï‡¶∞‡ßã: "I will: Pray" etc.
// todos.forEach(function(name, index){
//     console.log(`I will: ${name}`)
// });
// // 2Ô∏è‚É£ map ‡¶¶‡¶ø‡ßü‡ßá ‡¶∏‡¶¨‡¶ó‡ßÅ‡¶≤‡ßã‡¶∞ ‡¶∏‡¶æ‡¶•‡ßá "- Done" ‡¶Ø‡ßã‡¶ó ‡¶ï‡¶∞‡ßã 
//   let final =  todos.map(function(name){
//         return name + '- Done'
//     });
//     console.log(final);
// // 3Ô∏è‚É£ filter ‡¶¶‡¶ø‡ßü‡ßá ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶Ø‡ßá‡¶ó‡ßÅ‡¶≤‡¶æ "Code", "Study" ‡¶è‡¶ó‡ßÅ‡¶≤‡ßã ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßã
// let finals = todos.filter(function(name){
//     return name == "Code" || name == "Study";
// })
// console.log(finals);

// --------------------------------------------------------

// GPT--
// let nums = [10, 23, 55, 60, 90];

// // ‚úÖ filter ‡¶¶‡¶ø‡ßü‡ßá ‡¶∂‡ßÅ‡¶ß‡ßÅ even number ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßã
// let evens = nums.filter(function(num){
//     return num % 2 === 0;
// });
// console.log("Even Numbers:", evens);

// // ‚úÖ map ‡¶¶‡¶ø‡ßü‡ßá ‡¶∏‡¶¨‡¶ó‡ßÅ‡¶≤‡ßã‡¶ï‡ßá 5 ‡¶¶‡¶ø‡ßü‡ßá ‡¶≠‡¶æ‡¶ó ‡¶ï‡¶∞‡ßã
// let divided = nums.map(function(num){
//     return num / 5;
// });
// console.log("Divided by 5:", divided);



// let items = ["Pen", "Book", "Paper", "Pencil", "Eraser", "Notebook"];
// // 1Ô∏è‚É£ ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶Ø‡ßá‡¶ó‡ßÅ‡¶≤‡ßã‡¶∞ length 5-‡¶è‡¶∞ ‡¶¨‡ßá‡¶∂‡¶ø, ‡¶∏‡ßá‡¶ó‡ßÅ‡¶≤‡ßã ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßã (filter)
// let final = items.filter(function(name){
//     return name.length > 5;
// })
// console.log(final);
// // 2Ô∏è‚É£ ‡¶∏‡¶¨‡¶ó‡ßÅ‡¶≤‡ßã item-‡¶è‡¶∞ ‡¶®‡¶æ‡¶Æ uppercase ‡¶ï‡¶∞‡ßá ‡¶¶‡¶æ‡¶ì (map)
// let = result = items.map(function(name){
//     return name.toUpperCase();
// });
// console.log(result);


// // 3Ô∏è‚É£ forEach ‡¶¶‡¶ø‡ßü‡ßá ‡¶è‡¶ï‡¶ü‡¶æ motivational message ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ì:
// items.forEach(function(name, index){
//     console.log(`Today I will use: ${name}`);
// })
// // Output: "Today I will use: PEN", etc.



// // 1Ô∏è‚É£ ‡¶è‡¶ï‡¶ü‡¶æ const array declare ‡¶ï‡¶∞‡ßã with 5 items
// const  array = ["Dim", "Mim", "Mukta Akther", "Monira Moni", "Tithy"]
// // 2Ô∏è‚É£ ‡¶§‡¶æ‡¶∞ 2 ‡¶®‡¶Æ‡ßç‡¶¨‡¶∞ item change ‡¶ï‡¶∞‡ßã
// array[0] = "Mim";
// array[1] = "Dim";
// // 3Ô∏è‚É£ ‡¶®‡¶§‡ßÅ‡¶® ‡ß®‡¶ü‡¶æ item push ‡¶ï‡¶∞‡ßã
// array.push("Jarin", "Sirin")
// // 4Ô∏è‚É£ ‡¶∏‡¶¨ items log ‡¶ï‡¶∞‡ßã
// console.log(array)
// // Bonus: ‡¶∂‡ßÅ‡¶ß‡ßÅ ‡¶Ø‡ßá‡¶ó‡ßÅ‡¶≤‡¶æ length > 6 ‡¶∏‡ßá‡¶ó‡ßÅ‡¶≤‡¶æ filter ‡¶ï‡¶∞‡ßá print ‡¶ï‡¶∞‡ßã
// let final = array.filter(function(name){
//     return name.length > 6;
// });
// console.log(final);


// // 1. ‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßã
// console.log(new Date());
// // 2. "2025-05-17" string ‡¶•‡ßá‡¶ï‡ßá date object ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì
// console.log(new  Date("2025-05-17"))
// // 3. ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Æ‡¶¶‡¶ø‡¶®‡ßá‡¶∞ long format date ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì (e.g., "August 12, 2007")
// console.log(new Date("August 12, 2007"))


// let myBirthday = new Date("August 12, 2007");

// // 1. ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Æ ‡¶∏‡¶æ‡¶≤, ‡¶Æ‡¶æ‡¶∏, ‡¶§‡¶æ‡¶∞‡¶ø‡¶ñ ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßã
// let year = myBirthday.getFullYear();
// let month = myBirthday.getMonth() + 1;
// let date = myBirthday.getDate();
// // 2. ‡¶ï‡ßã‡¶® ‡¶¶‡¶ø‡¶® ‡¶ú‡¶®‡ßç‡¶Æ‡ßá‡¶õ‡ßã (e.g., Sunday, Monday)
// let days = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
// let day = days[myBirthday.getDay()];
// // 3. ‡¶ú‡¶®‡ßç‡¶Æ‡¶¶‡¶ø‡¶®‡ßá‡¶∞ ‡¶ò‡¶£‡ßç‡¶ü‡¶æ, ‡¶Æ‡¶ø‡¶®‡¶ø‡¶ü, ‡¶∏‡ßá‡¶ï‡ßá‡¶®‡ßç‡¶° ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ì
// let hours = myBirthday.getHours();
// let min = myBirthday.getMinutes();
// let second = myBirthday.getSeconds();
// // 4. ‡¶∏‡¶¨‡¶ó‡ßÅ‡¶≤‡ßã console.log() ‡¶ï‡¶∞‡ßã
// console.log("Year:", year);
// console.log("Month:", month);
// console.log("Date:", date);
// console.log("Day:", day);
// console.log("Hour:", hours);
// console.log("Minute:", min);
// console.log("Second:", second);



// // Lucky's Birthday is on Sunday, 12/8/2007 at 00:00:00

// getMyBirthdayDetails("12/8/2007 00:00:00 " ) {
//    let date = getComputedStyle.getDate();
//    let month = getComputedStyle.getMonth() + 1;
//    let year = getComputedStyle.getFullYear();
//    let day = getComputedStyle.getDay();
//     let hours = getMyBirthdayDetails.getHours();
//     let min = getMyBirthdayDetails.getMinues()
//     let second = getMyBirthdayDetails.getSecond()
//     console.log(`Lucky's Birthday is on ${day}, ${date}/${month}/${year} at ${hours}:${min}:${second}`)
// };



// let myDate = new Date();


// myDate.setDate(12);
// myDate.setMonth(8);
// myDate.setFullYear(2007);


// console.log(myDate)


// let text = "";
// const today = new Date();
// const someday = new Date();
// someday.setFullYear(2100, 0, 14);

// if (someday > today) {
//   console.log("Today is before January 14, 2100.");
// } else {
//   console.log("Today is after January 14, 2100.");
// }



// console.log(Math.round(4.4))
// console.log(Math.ceil(3.1));
// console.log(Math.floor(4.9));
// console.log(Math.trunc(4.7))
// console.log(Math.pow(5, 3));
// console.log(Math.sqrt(10));



// console.log(Math.sqrt())

// console.log(Math.min(1,3,5,32,53))
// console.log(Math.max(4,654,543,5,456,7));

// console.log(Math.random());

// // 1. 9.7 ‡¶ï‡ßá round ‡¶ï‡¶∞‡ßã
// console.log(Math.round(9.7));
// // 2. 3.3 ‡¶ï‡ßá ceil ‡¶ï‡¶∞‡ßã
// console.log(Math.ceil(3.3));
// // 3. 5.8 ‡¶ï‡ßá floor ‡¶ï‡¶∞‡ßã
// console.log(Math.floor(5.8));
// // 4. 16 ‡¶è‡¶∞ square root ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßã
// console.log(Math.sqrt(16));
// // 5. 4 ‡¶è‡¶∞ power 3 ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßã
// console.log(Math.pow(4,3));
// // 6. 0 ‡¶•‡ßá‡¶ï‡ßá 10 ‡¶è‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶è‡¶ï‡¶ü‡¶æ random ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ì
// // Who is batter
// console.log(Math.floor(Math.random() * 10 + 1));
// console.log(Math.ceil(Math.random() * 10));
// console.log(Math.round(Math.random() * 10 ));



// console.log(Boolean(false));     
// console.log(Boolean(100));      
// console.log(Boolean("0"));      
// console.log(Boolean(null));     
// console.log(Boolean(undefined));


// let x = 15;
// let y = "15";
// let z = 10;

// console.log(x == y);    // ? true
// console.log(x === y);   // ? false
// console.log(x != z);    // ? true
// console.log(x > z);     // ? true
// console.log(x <= y);    // ? true



// let isStudent = true;
// let hasID = false;
// let age = 20;

// // üëâ ‡¶Ø‡¶¶‡¶ø user student ‡¶π‡ßü AND ‡¶§‡¶æ‡¶∞ ID ‡¶•‡¶æ‡¶ï‡ßá, ‡¶Ö‡¶•‡¶¨‡¶æ ‡¶¨‡ßü‡¶∏ 18+ ‡¶π‡ßü,
// if((isStudent && hasID) || age >= 18){ 
//     // ‡¶§‡¶æ‡¶π‡¶≤‡ßá console.log ‡¶ï‡¶∞‡ßã "Entry allowed"
//     console.log('Entry allowed')
// }else{ // ‡¶®‡¶æ ‡¶π‡¶≤‡ßá "Access denied"
//     console.log('Access denied')
// };

// let isLoggedIn = true;
// // ‡¶Ø‡¶¶‡¶ø user logged in ‡¶•‡¶æ‡¶ï‡ßá ‚Üí console ‡¶è ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá: "Welcome back!"
// let result = isLoggedIn ? 'Welcome back!' : 'Please log in!';
// console.log(result);
// // ‡¶®‡¶æ ‡¶π‡¶≤‡ßá ‚Üí console ‡¶è ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá: "Please log in!"


// let student = {
//   name: "Lucky",
//   age: 17,
//   class: "Dakhil"
// };

// for(let key in student){
//     console.log(key + " :" + student[key])
// }


// let student = {
//   name: "Rubel",
//   age: 17,
//   class: "Dakhil",
//   group: "Arts"
// };

// // üëâ ‡¶è‡¶á object ‡¶è ‡¶ï‡ßü‡¶ü‡¶æ property ‡¶Ü‡¶õ‡ßá ‡¶∏‡ßá‡¶ü‡¶æ console.log ‡¶ï‡¶∞‡ßã
// let count = 0;

// for(let length in student){
//     count++
// };

// console.log(count);

// ‡¶è‡¶ï‡¶ü‡¶ø array ‡¶Ü‡¶õ‡ßá, ‡¶§‡¶æ‡¶∞ ‡¶∏‡¶¨ values console.log ‡¶ï‡¶∞‡ßã using for...of

// let numbers = [10, 20, 30, 40];

// for(let num of numbers){
//   console.log(num)
// };


// // ‡¶è‡¶ï‡¶ü‡¶ø string ‡¶è‡¶∞ ‡¶™‡ßç‡¶∞‡¶§‡¶ø‡¶ü‡¶ø character console.log ‡¶ï‡¶∞‡ßã using for...of

// let message = "Bangladesh";

// for(let letter of message){
//   console.log(letter)
// };


// üéØ Challenge Time (Solve These):
// üî• Problem 1:
// ‡¶è‡¶ï‡¶ü‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ 1 ‡¶•‡ßá‡¶ï‡ßá 20 ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ while loop ‡¶¶‡¶ø‡ßü‡ßá console ‡¶ï‡¶∞‡ßã‡•§
// {
//   let n = 1;
// while(n <= 20){
  
// // Only even numbers (only 2, 4, 6...).
//   if( n % 2 === 0)
//     // sorry ata ami google theke serch kore ber krci...
//   console.log(n)
//   n++
// } 
//   }

// // üî• Problem 2:
// // ‡¶è‡¶ï‡¶ü‡¶æ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶ß‡¶∞‡ßã n = 5
// let n = 5;
// while(n >= 1 ){
//   console.log(n)
//   n--
// };

// // Use while loop to calculate the factorial of n.// banglay bollee bujhtam




// üéØ ‡¶è‡¶ñ‡¶® ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø ‡ß®‡¶ü‡¶æ ‡¶ö‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶û‡ßç‡¶ú:

// // ‚úÖ ‡¶ö‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶û‡ßç‡¶ú ‡ßß:
// // do...while ‡¶≤‡ßÅ‡¶™ ‡¶¨‡ßç‡¶Ø‡¶¨‡¶π‡¶æ‡¶∞ ‡¶ï‡¶∞‡ßá 1 ‡¶•‡ßá‡¶ï‡ßá 10 ‡¶™‡¶∞‡ßç‡¶Ø‡¶®‡ßç‡¶§ ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ ‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡ßã‡•§
// let num = 1;
// do{
//   console.log(num)
//   num++
// }while(num <= 10);

// // ‚úÖ ‡¶ö‡ßç‡¶Ø‡¶æ‡¶≤‡ßá‡¶û‡ßç‡¶ú ‡ß®:
// // do...while ‡¶≤‡ßÅ‡¶™ ‡¶¶‡¶ø‡ßü‡ßá ‡¶∂‡ßÅ‡¶ß‡ßÅ 2, 4, 6, 8, 10 (even ‡¶∏‡¶Ç‡¶ñ‡ßç‡¶Ø‡¶æ) ‡¶™‡ßç‡¶∞‡¶ø‡¶®‡ßç‡¶ü ‡¶ï‡¶∞‡ßã‡•§
// let i = 2;
// // help with deepseek 
// do{
//   console.log(i)
//   i+= 2
// }while(i <= 10)

//   //deepseek 



// Just experiment

// const arr = ['Ena', 'Mina', 'Tina'];
// arr.push('Lina');

// console.log(arr)


// Again back after 4 days left


// const fruits = ["Apple", "Banana", "Mango"];

// for(const fruit of fruits){
//     console.log(fruit)
// };

// const name = "Lucky";

// for (const letter of name) {
//   console.log(letter);
// }

// Asignment 

// // üëâ ‡¶è‡¶ï‡¶ü‡¶æ array ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì ‡¶Ø‡ßá‡¶ü‡¶æ‡¶∞ ‡¶Æ‡¶ß‡ßç‡¶Ø‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶™‡¶õ‡¶®‡ßç‡¶¶‡ßá‡¶∞ ‡ß´‡¶ü‡¶æ ‡¶ú‡¶ø‡¶®‡¶ø‡¶∏ (‡¶Ø‡ßá‡¶Æ‡¶®: ‡¶ñ‡¶æ‡¶¨‡¶æ‡¶∞, ‡¶¨‡¶á, ‡¶∏‡¶´‡¶ü‡¶ì‡ßü‡ßç‡¶Ø‡¶æ‡¶∞ ‡¶ü‡ßÅ‡¶≤, ‡¶∏‡ßç‡¶™‡ßã‡¶∞‡ßç‡¶ü‡¶∏ ‡¶ü‡¶ø‡¶Æ ‡¶á‡¶§‡ßç‡¶Ø‡¶æ‡¶¶‡¶ø)‡•§
// const myLove = [ 'Biryani', 'VSCode', 'Messi', 'React', 'FreeCodeCamp' ];
// // ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ for...of ‡¶¶‡¶ø‡ßü‡ßá ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶è‡¶ï‡¶ü‡¶æ‡¶∞ ‡¶™‡¶∞ ‡¶è‡¶ï‡¶ü‡¶æ console ‡¶è ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ì‡•§
// for(const love of myLove){
//     console.log(`I love : ${love}`);
// }


// // üëâ ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ (string) ‡¶ï‡ßá for...of ‡¶≤‡ßÅ‡¶™ ‡¶¶‡¶ø‡ßü‡ßá ‡¶ò‡ßÅ‡¶∞‡¶ø‡ßü‡ßá, ‡¶ï‡ßü‡¶ü‡¶æ vowel ‡¶Ü‡¶õ‡ßá ‡¶∏‡ßá‡¶ü‡¶æ ‡¶ó‡ßÅ‡¶®‡ßã‡•§


// let myName = 'Mehidi';
// let vowelCount = 0;

// for (let letter of myName.toLowerCase()){
//     if("aeiou".includes(letter)){
//         vowelCount++
//     }

// }

// console.log(`Total vowels in '${myName}' = ${vowelCount}`);



// // ‚úÖ ‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ Assignment (2‡¶ü‡¶æ):
// // 1Ô∏è‚É£: Unique Numbers Only
// const nums = [1, 2, 2, 3, 4, 4, 5];
// // // üëâ ‡¶è‡¶ï‡¶ü‡¶æ array ‡¶¶‡¶æ‡¶ì ‡¶Ø‡ßá‡¶ü‡¶æ‡¶§‡ßá duplicate number ‡¶Ü‡¶õ‡ßá‡•§ 
// const numbers = new Set(nums);
// console.log(numbers);
// // ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ Set ‡¶¶‡¶ø‡ßü‡ßá unique number ‡¶ó‡ßÅ‡¶≤‡ßã ‡¶¨‡ßá‡¶∞ ‡¶ï‡¶∞‡ßã
// // // output: 1 2 3 4 5

// // ---------------Extra-------------------

// let mySet = new Set([6,8,7,6,5]);

// console.log(mySet);


// let crush = new Set(['Mukta', 'Mariya', 'Mim', 'Mim']);

// if(crush.has('Tithy')){
//     crush.add('Taniya');
//     crush.delete('Mim');
//     console.log(crush, crush.size);
// }else{
//       crush.clear();
//       console.log('Empty Worldüò• without Tithy');

// }





// // 2Ô∏è‚É£: My Set of Skills


// // üëâ ‡¶§‡ßÅ‡¶Æ‡¶ø ‡¶Ø‡ßá ‡¶∏‡ßç‡¶ï‡¶ø‡¶≤‡¶ó‡ßÅ‡¶≤‡ßã ‡¶∂‡¶ø‡¶ñ‡¶õ‡ßã ‡¶§‡¶æ‡¶∞ ‡¶è‡¶ï‡¶ü‡¶æ Set ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì (HTML, CSS, JS, React ‡¶á‡¶§‡ßç‡¶Ø‡¶æ‡¶¶‡¶ø)‡•§
// let skills = new Set(['HTML', 'CSS', 'JS', 'React']);
// // ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ check ‡¶ï‡¶∞‡ßã ‡¶§‡ßÅ‡¶Æ‡¶ø ‚ÄúPython‚Äù ‡¶ú‡¶æ‡¶®‡ßã ‡¶ï‡¶ø‡¶®‡¶æ (has() method ‡¶¶‡¶ø‡ßü‡ßá)‡•§ ‡¶Ø‡¶¶‡¶ø ‡¶®‡¶æ ‡¶ú‡¶æ‡¶®‡ßã, add ‡¶ï‡¶∞‡ßá ‡¶´‡ßá‡¶≤‡ßã!

// if(skills.has('Python')){
//     console.log(skills);
// }else{
//     skills.add('Python');
//     console.log('Updated skills :', skills);
// }







// 1Ô∏è‚É£: Student Info Map

// üëâ ‡¶è‡¶ï‡¶ü‡¶æ Map ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶•‡¶æ‡¶ï‡¶¨‡ßá:

// name: ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ

// age: ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶¨‡ßü‡¶∏

// hobby: ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶™‡ßç‡¶∞‡¶ø‡ßü ‡¶ï‡¶æ‡¶ú

// const myMap = new Map();
// myMap.set('name', 'Lucky');
// myMap.set('age', 17,);
// myMap.set('hobby','codes' );


// // ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ get() ‡¶¶‡¶ø‡ßü‡ßá name ‡¶Ü‡¶∞ hobby ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ì‡•§
// let name = myMap.get('name');
// let hobby = myMap.get('hobby');

// console.log(`Hi GPT My best friendüßë! My name is ${name}, and My hobby is ${hobby}`);



// // 2Ô∏è‚É£: Country Code Map
// // üëâ ‡¶è‡¶ï‡¶ü‡¶æ map ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá country code (like: "BD", "US", "UK") ‡¶Ü‡¶∞ country name ‡¶•‡¶æ‡¶ï‡¶¨‡ßá‡•§
// let countryCode = new Map([
//     ["BD", "Bangladesh"],
//     [ "US", "United States"],
//     ["UK", "United Kingdom"],

// ]);


// // ‡¶§‡¶æ‡¶∞‡¶™‡¶∞:
// // "BD" ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø‡¶®‡¶æ check ‡¶ï‡¶∞‡ßã
// if(countryCode.has('BD')){
//    console.log(countryCode);
// }else{
//    // ‡¶®‡¶æ ‡¶•‡¶æ‡¶ï‡¶≤‡ßá add ‡¶ï‡¶∞‡ßá ‡¶´‡ßá‡¶≤‡ßã 
//    countryCode.set("BD", "Bangladesh");
// }
// // ‡¶∂‡ßá‡¶∑‡ßá ‡¶∏‡¶¨ ‡¶ï‡¶ø‡¶õ‡ßÅ‡¶ï‡ßá for...of ‡¶¶‡¶ø‡ßü‡ßá ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ì
//  for(let [code, country] of countryCode){
//     console.log(`${code} => ${country}`);
//  }








// ‚úÖ ‡¶Ü‡¶ú‡¶ï‡ßá‡¶∞ Assignment (2‡¶ü‡¶æ):
// 1Ô∏è‚É£: Simple Login System
// üëâ ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ ‡¶Æ‡¶§ ‡¶è‡¶ï‡¶ü‡¶æ username ‡¶Ü‡¶∞ password check ‡¶ï‡¶∞‡ßã:


// let username = "lucky";
// let password = 12345;


// let userNames = "lucky";
// let userPassword = 12345;
// if(username === userNames && password === userPassword){
// // ‚û°Ô∏è ‡¶Ø‡¶¶‡¶ø username lucky ‡¶Ü‡¶∞ password 12345 ‡¶π‡ßü, ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ì ‚Äî
// // Welcome back Lucky! üßë‚Äçüíª
// console.log("Welcome back Lucky! üßë‚Äçüíª")
// }else{
//    // ‡¶®‡¶æ ‡¶π‡¶≤‡ßá ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ì ‚Äî Access Denied! ‚ùå
//    console.log("Access Denied! ‚ùå");
// }


// // 2Ô∏è‚É£: Even or Odd Checker
// // üëâ ‡¶è‡¶ï‡¶ü‡¶æ number input ‡¶®‡¶æ‡¶ì (variable ‡¶¶‡¶ø‡ßü‡ßá)
// // Check ‡¶ï‡¶∞‡ßã ‡¶∏‡ßá‡¶ü‡¶æ even ‡¶®‡¶æ odd?

// // js
// // Copy
// // Edit
// // let number = 7;
// // ‚û°Ô∏è Output:

// // arduino
// // Copy
// // Edit
// // "7 is odd" ‡¶¨‡¶æ "8 is even"
// // üéØ Bonus (‡¶Ø‡¶¶‡¶ø ‡¶™‡¶æ‡¶∞‡ßã):
// // üëâ ‡¶Ü‡¶∞‡ßá‡¶ï‡¶ü‡¶æ check ‡¶ï‡¶∞‡ßã: ‡¶Ø‡¶¶‡¶ø number 0 ‡¶π‡ßü, ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ì ‚Äî "Zero is neither even nor odd"

// // ‚úÖ Assignment complete ‡¶ï‡¶∞‡¶≤‡ßá code paste ‡¶¶‡ßá, ‡¶Ü‡¶Æ‡¶ø check ‡¶ï‡¶∞‡ßá ‡¶¶‡¶ø‡¶¨‡ßã‡•§
// // üîú Next: Switch Statement ‡¶¨‡¶æ Logical Operators ‡¶®‡¶ø‡ßü‡ßá ‡¶Ø‡¶æ‡¶¨‡ßã‡•§

// // ‡¶≤‡¶ø‡¶ñ‡ßá ‡¶´‡ßá‡¶≤ ‚Äî "Assignment complete" ‡¶Ø‡¶ñ‡¶® ready! üòéüß†üíª


// // 1Ô∏è‚É£ ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ number ‡¶ï‡ßá string ‡¶è convert ‡¶ï‡¶∞‡ßã ‡¶è‡¶¨‡¶Ç type ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ì
// let birthYear = 2007;

// let finaBirth = birthYear.toString();
// console.log(typeof finaBirth); 

// // 2Ô∏è‚É£ ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ boolean value ‡¶ï‡ßá string ‡¶ï‡¶∞‡ßã
// let isLucky = true;
// isLucky.toString();

// // 3Ô∏è‚É£ ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ array ‡¶ï‡ßá string ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì
// let favLangs = ["HTML", "CSS", "JS", "Python"];
// favLangs.toString();

// // Extra
// let nothing = null;
// let noth = String(nothing);
// console.log(typeof noth);


// // 1Ô∏è‚É£ ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ value ‡¶ó‡ßÅ‡¶≤‡ßã‡¶ï‡ßá number ‡¶è convert ‡¶ï‡¶∞‡ßã:
// let str1 = "100";
// let str2 = "hello";
// let bool1 = true;
// let strOne = Number(str1);
// let strTwo = Number(str2);
// let boolOne = Number(bool1);

// console.log(`${typeof str1} | ${typeof str2} | ${typeof bool1}`);

// // 2Ô∏è‚É£ ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ number ‡¶ï‡ßá boolean ‡¶è convert ‡¶ï‡¶∞‡ßã:
// let num1 = 0;
// let num2 = 45;

// let  bollNum = Boolean(num1);
// let  bollNumTwo = Boolean(num2);

// console.log(`${typeof bollNum} | ${typeof bollNumTwo}`);


// // 3Ô∏è‚É£ ‡¶®‡¶ø‡¶ö‡ßá‡¶∞ ‡¶∏‡¶¨‡¶ï‡¶ø‡¶õ‡ßÅ‡¶ï‡ßá string ‡¶ï‡¶∞‡ßã:
// let n1 = null;
// let n2 = undefined;
// let n3 = NaN;

// let strn1 = String(null);
// let strn2 = String(undefined);
// let strn3 = String(NaN);

// console.log(`${typeof strn1} | ${typeof strn2} | ${typeof strn3}`);



// // 4Ô∏è‚É£ Bonus: ‡¶ï‡ßã‡¶®‡¶ü‡¶æ Truthy ‡¶Ü‡¶∞ ‡¶ï‡ßã‡¶®‡¶ü‡¶æ Falsy? Try using Boolean()
// let v1 = "";  //false
// let v2 = "Lucky"; //true
// let v3 = 0; //false
// let v4 = 1; //true
// let v5 = null; //false

// console.log(Boolean(v1));

// console.log(Boolean(v2));

// console.log(Boolean(v3));

// console.log(Boolean(v4));

// console.log(Boolean(v5));




// let book = ["JS", "React", "Node"];
// // ‡¶è‡¶ï ‡¶≤‡¶æ‡¶á‡¶®‡ßá destructure ‡¶ï‡¶∞‡ßá ‡¶™‡ßç‡¶∞‡¶•‡¶Æ ‡¶ì ‡¶∂‡ßá‡¶∑‡¶ü‡¶æ console.log ‡¶ï‡¶∞‡ßã
// let [jsBo0k, reactBook, nodeBook] = book;
// console.log(jsBo0k);
// console.log(nodeBook);

// let student = {
//   name: "Rubel",
//   batch: "2025",
//   section: "A"
// };
// // destructuring ‡¶ï‡¶∞‡ßá ‡¶∂‡ßÅ‡¶ß‡ßÅ section ‡¶ü‡¶æ ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ì

// let = {section} = student;

// console.log(section);


// // // ‚úÖ ‡¶è‡¶ï‡¶ü‡¶æ pattern ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì ‡¶Ø‡ßá‡¶ü‡¶æ ‡¶∂‡ßÅ‡¶ß‡ßÅ ‚ÄúLucky‚Äù ‡¶≤‡¶ø‡¶ñ‡¶æ ‡¶Ü‡¶õ‡ßá ‡¶ï‡¶ø ‡¶®‡¶æ ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡ßá‡•§
// let str = "Hi Lucky, Will you marry me? Lucky Please respect my proposal";
// let result = str.match(/Lucky/g);
// console.log(result)

// // ‚úÖ ‡¶Ü‡¶∞‡ßá‡¶ï‡¶ü‡¶æ pattern ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì ‡¶Ø‡ßá‡¶ü‡¶æ ‡¶∂‡ßÅ‡¶ß‡ßÅ digit ‡¶ö‡ßá‡¶ï ‡¶ï‡¶∞‡¶¨‡ßá (1-9)‡•§

// let str1 = "Lucky123 wants 5 mangoes and 1000 taka";
// let result1 = str.match(/\d+/g);
// console.log(result);  // üëâ ["123", "5", "1000"]




// üéØ ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶ú ‡¶Ü‡¶ú:
// 
// // ‡¶è‡¶ï‡¶ü‡¶æ custom throw ‡¶ï‡¶∞‡ßá error ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì
// const myFunc =(a, b)=>{
//     if(b === 0){
//         throw new Error('Error Messege');
//     } return a / b
// }


// // try-catch ‡¶¶‡¶ø‡ßü‡ßá ‡ß®‡¶ü‡¶æ bug ‡¶ß‡¶∞‡ßã

// try{
//    console.log( myFunc(5, 0))
// }catch(err){
//     console.log(err.message); // ‚úÖ Correct spelling

// } 


// // ReferenceError ‡¶è‡¶∞ example ‡¶¶‡ßá‡¶ñ‡¶æ‡¶ì

// let a = 10 + b;



// // ‡ßßÔ∏è‚É£ ‡¶è‡¶ï‡¶ü‡¶æ function ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì ‡¶Ø‡ßá‡¶ñ‡¶æ‡¶®‡ßá ‡¶è‡¶ï‡¶ü‡¶æ block scope variable declare ‡¶ï‡¶∞‡¶¨‡¶æ
// const myFunc = ()=>{
//     let funScope = "I'm Funtion Scope";
//     // Break
//     if(true){
//        let blockScope = "I'M BlockScope"
//     }
// }


// myFunc();
// // ‡ß®Ô∏è‚É£ ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ function ‡¶è‡¶∞ ‡¶¨‡¶æ‡¶á‡¶∞‡ßá ‡¶∏‡ßá‡¶ü‡¶æ access ‡¶ï‡¶∞‡ßá error ‡¶ß‡¶∞‡¶¨‡¶æ
// try{
//     console.log(funScope);
//     //Break
//     console.log(blockScope);
// }catch(err){
//     console.log(err.message);
// }

// {// undefined
// // console.log(msg);
// // var msg = "Hello!";
// }

// {//solve

// var msg = "Hello!";
// console.log(msg);
// }



// { //Reference error
// //     greet();
// // let greet = function() {
// //   console.log("Hey there!");
// // };
// }


// { //solve
    
// let greet = function() {
//   console.log("Hey there!");
// };
// greet();
// }


// {
//     "use strict";
// let a = 10;
// b = 20;
// console.log(a + b);

// // Error
// }'


// const student = {
//   name: "Lucky",
//   id: 101,
//   printInfo: function () {
//     setTimeout(() => {
//       console.log(`Student: ${this.name}, ID: ${this.id}`);
//     }, 1000);
//   }
// };

// student.printInfo();

// // üìå Explain: ‡¶ï‡ßá‡¶® ‡¶è‡¶ñ‡¶æ‡¶®‡ßá arrow function use ‡¶ï‡¶∞‡¶æ ‡¶†‡¶ø‡¶ï ‡¶õ‡¶ø‡¶≤?
// // ‡¶Ø‡ßá‡¶π‡ßá‡¶§‡ßÅ ‡¶Ö‡ßç‡¶Ø‡¶æ‡¶∞‡ßã ‡¶´‡¶æ‡¶Ç‡¶∂‡¶®‡¶ó‡ßÅ‡¶≤‡ßã ‡¶§‡¶æ‡¶¶‡ßá‡¶∞ ‡¶≤‡ßá‡¶ï‡ßç‡¶∏‡¶ø‡¶ï‡ßç‡¶Ø‡¶æ‡¶≤ ‡¶∏‡ßç‡¶ï‡ßã‡¶™ ‡¶•‡ßá‡¶ï‡ßá this ‡¶ï‡ßá ‡¶â‡¶§‡ßç‡¶§‡¶∞‡¶æ‡¶ß‡¶ø‡¶ï‡¶æ‡¶∞ ‡¶∏‡ßÇ‡¶§‡ßç‡¶∞‡ßá ‡¶™‡¶æ‡¶Ø‡¶º,


// // üß† Assignment: Your Own Example!
// // üëâ ‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶ï‡¶æ‡¶ú:
// // ‡¶è‡¶ï‡¶ü‡¶æ object ‡¶¨‡¶æ‡¶®‡¶æ‡¶ì (‡¶§‡ßã‡¶Æ‡¶æ‡¶∞ ‡¶®‡¶æ‡¶Æ, age, job ‡¶•‡¶æ‡¶ï‡¶¨‡ßá)‡•§
// // ‡¶§‡¶æ‡¶§‡ßá showInfo() ‡¶®‡¶æ‡¶Æ‡ßá ‡¶è‡¶ï‡¶ü‡¶æ method ‡¶•‡¶æ‡¶ï‡¶¨‡ßá ‡¶Ø‡ßá‡¶ü‡¶æ this use ‡¶ï‡¶∞‡ßá ‡¶∏‡¶¨ print ‡¶ï‡¶∞‡¶¨‡ßá‡•§

// const me = {
//     name: 'Lucky',
//     age: 17,
//     job: 'Web Developer',
//     showInfo: function(){
//         console.log(`Hello my name is ${this.name}, I'm ${this.age} years old, I working as a ${this.job}`)
//     }
// };

// me.showInfo();




// ‚úÖ Assignment Time üòé
// üëâ ‡¶§‡ßã‡¶∞ ‡¶ï‡¶æ‡¶ú:

// ‡¶è‡¶ï‡¶ü‡¶æ Car class ‡¶¨‡¶æ‡¶®‡¶æ‡¶¨‡¶ø‡•§

class Car{
  // Constructor ‡¶è ‡¶®‡¶ø‡¶¨‡ßá ‚Äî brand ‡¶Ü‡¶∞ model‡•§
  constructor(brand, model){
    this.brand = brand;
    this.model = model;
  }
// ‡¶è‡¶ï‡¶ü‡¶æ method ‡¶π‡¶¨‡ßá showDetails() ‚Üí ‡¶Ø‡ßá‡¶ü‡¶æ ‡¶¨‡¶≤‡¶¨‡ßá:
  showDetails(){
// Brand: Toyota, Model: Corolla
    console.log(`Brand: ${this.brand}, Model: ${this.model}`)
  }

}

// ‡¶§‡¶æ‡¶∞‡¶™‡¶∞ ElectricCar ‡¶®‡¶æ‡¶Æ‡ßá ‡¶Ü‡¶∞‡ßá‡¶ï‡¶ü‡¶æ class ‡¶¨‡¶æ‡¶®‡¶æ‡¶¨‡¶ø, ‡¶Ø‡ßá‡¶ü‡¶æ Car class ‡¶ï‡ßá extend ‡¶ï‡¶∞‡¶¨‡ßá‡•§
  class ElectricCar extends Car{
// ‡¶§‡¶æ‡¶∞ constructor ‡¶è ‡¶®‡¶§‡ßÅ‡¶® property ‡¶®‡¶ø‡¶¨‡¶ø: batteryLife
    constructor(batteryLife){
      super(batteryLife);
      this.batteryLife = batteryLife;
      // ‡¶è‡¶ï‡¶ü‡¶æ ‡¶®‡¶§‡ßÅ‡¶® method ‡¶¨‡¶æ‡¶®‡¶æ‡¶¨‡¶ø: showBattery() ‚Üí ‡¶¨‡¶≤‡¶¨‡ßá:
    }
      showBattery(){
        // Battery Life: 500km
        console.log(`Battery Life:  ${this.batteryLife}km`)
      }
  }

  const myCar = new Car('Toyota', 'Corolla');
  const battery = new ElectricCar(500);

  myCar.showDetails();
  battery.showBattery()

 